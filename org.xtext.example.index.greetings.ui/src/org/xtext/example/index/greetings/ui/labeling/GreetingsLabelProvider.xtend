/*
* generated by Xtext
*/
package org.xtext.example.index.greetings.ui.labeling

import com.google.inject.Inject
import org.xtext.example.index.greetings.greetings.RefGreeting
import org.xtext.example.index.greetings.greetings.HelloGreeting
import org.eclipse.emf.ecore.util.EcoreUtil

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
class GreetingsLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	def text(RefGreeting ref) {
		'ref: ' + ref.greeting.text
	}
	
	def String text(HelloGreeting hello) {
		hello?.name +
		if (hello.parent != null) {
			" -> " + hello.parent.ensureIsResolved(hello).text
		} else {
			""
		}
	}
	
	def ensureIsResolved(HelloGreeting ref, HelloGreeting context) {
		if (ref.eIsProxy) {
			val resolved = EcoreUtil::resolve(ref, context)
			return resolved as HelloGreeting
		}
		return ref
	}
}
